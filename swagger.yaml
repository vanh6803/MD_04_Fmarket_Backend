openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: site
    description: api login, register, logout, verify
paths:
  /login:
   post:
    tags: 
      - site
    summary: login
    description: login 
    operationId: login
    requestBody:
      description: information user
      content:
        application/json:
          schema: 
            type: object
            properties:
              email:
                type: string
                example: vanh@gmail.com
              password:
                type: string
                example: fmarketmd04
      required: true
    responses:
      '200':
        description: login successful
        content:
          application/json:
            schema: 
              type: object
              properties:
                token: 
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NTI2ZDQxODc2YTQ2NTQ2YTY5YzU0NTEiLCJpYXQiOjE2OTcwOTc3NjJ9.WxrEIvmPAqGIqpzCXIERCXZShb_tZpFDjXqSczkCktY
          
